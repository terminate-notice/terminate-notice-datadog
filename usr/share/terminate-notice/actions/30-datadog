#!/usr/bin/sh
# This will look odd in the version control, but this will be set to the tag identifier
# and date it was tagged in CI/CD.
VERSION="#TAG# - #TAG_DATE#"

# Load the helper function used later on.
# shellcheck disable=SC1091
. /usr/share/terminate-notice/helpers

# This announces that the action has been triggered to syslog.
start_action "$(basename "$0")-$VERSION"

# This tries to read the config then checks to see whether the load failed
eval "$(load_config datadog)"
if [ "$FAILED" -eq 1 ]
then
    error 2 "$(basename "$0")-$VERSION" Failed to load config
fi

# Check all your required variables have been defined
debug "$(basename "$0")-$VERSION" Checking API key is set
if [ -z "${datadog_api_key}" ]
then
    error 2 "$(basename "$0")-$VERSION" "No datadog_api_key defined"
fi

debug "$(basename "$0")-$VERSION" Checking API endpoint is set
if [ -z "${datadog_api_endpoint}" ]
then
    error 2 "$(basename "$0")-$VERSION" "No datadog_api_endpoint defined"
fi

debug "$(basename "$0")-$VERSION" Checking _HOSTNAME is set
if [ -z "${_HOSTNAME}" ]
then
    error 2 "$(basename "$0")-$VERSION" "No _HOSTNAME defined"
fi

# If VERIFY=1 then this will announce that the variables were loaded OK on first run, and then exit.
verified "$(basename "$0")-$VERSION"

# Now you can actually run the action, because all the variables have been defined and tested.
if [ "${TERMINATE_NOTICE_RECEIVED:-0}" -eq 1 ]
then
    _MESSAGE=terminate-notice
elif [ "${REBALANCE_RECOMMENDATION_RECEIVED:-0}" -eq 1 ]
then
    _MESSAGE=rebalance-recommendation
else
    _MESSAGE=generic
fi

debug Try to post the status
_POST_COUNTER=0
_POST_MESSAGE_SENT=0
until curl -X POST "${datadog_api_endpoint}" \
     -H "Accept: application/json"  -H "Content-Type: application/json" \
     -H "DD-API-KEY: ${datadog_api_key}" \
     -d @- << EOF
{
  "ddsource": "terminate-notice",
  "hostname": "$_HOSTNAME",
  "notice": $STATUS,
  "message": "Terminate Notice received from Metadata Service."
}
EOF
do
    _POST_COUNTER=$((_POST_COUNTER+1))
    if [ $_POST_MESSAGE_SENT -eq 0 ] && [ $_POST_COUNTER -eq 1 ]
    then
        warning "$(basename "$0")-$VERSION" Waiting for the DataDog API to become available.
        _POST_MESSAGE_SENT=1
    elif [ $_POST_MESSAGE_SENT -eq 1 ] && [ $_POST_COUNTER -eq 5 ]
    then
        error 2 "$(basename "$0")-$VERSION" Failed to send
        exit 5
    else
        info "$(basename "$0")-$VERSION" DataDog Notice Sent.
    fi
    sleep 2
done